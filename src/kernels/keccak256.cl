/*
   Copyright 2018 Lip Wee Yeo Amano

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

/**
* Based on the following, with small tweaks and optimizations:
*
* https://github.com/lwYeo/SoliditySHA3Miner/blob/master/SoliditySHA3Miner/
*   Miner/Kernels/OpenCL/sha3KingKernel.cl
*
* Originally modified for openCL processing by lwYeo
*
* Original implementor: David Leon Gil
*
* License: CC0, attribution kindly requested. Blame taken too, but not
* liability.
*/

/******** Keccak-f[1600] (for finding efficient Ethereum addresses) ********/

#define OPENCL_PLATFORM_UNKNOWN 0
#define OPENCL_PLATFORM_AMD   2

#ifndef PLATFORM
# define PLATFORM       OPENCL_PLATFORM_UNKNOWN
#endif

#if PLATFORM == OPENCL_PLATFORM_AMD
# pragma OPENCL EXTENSION   cl_amd_media_ops : enable
#endif

#define CONTROL_CHAR_LENGTH  1u
#define UINT32_LENGTH        4u
#define UINT64_LENGTH        8u
#define UINT96_LENGTH       12u
#define UINT160_LENGTH      20u
#define UINT256_LENGTH      32u
#define NONCE_START         45u
#define NONCE_END           53u
#define MESSAGE_LENGTH      85u
#define START_PADDING       86u
#define END_PADDING        135u
#define START_FINAL        136u
#define SPONGE_LENGTH      200u
#define MAX_SOLUTIONS      256u

typedef union _nonce_t
{
  ulong   uint64_t;
  uchar   uint8_t[UINT64_LENGTH];
} nonce_t;

static inline ulong rol(const ulong x, const uint s)
{
#if PLATFORM == OPENCL_PLATFORM_AMD

  uint2 output;
  uint2 x2 = as_uint2(x);

  output = (s > 32u) ? amd_bitalign((x2).yx, (x2).xy, 64u - s) : amd_bitalign((x2).xy, (x2).yx, 32u - s);
  return as_ulong(output);

#else

  return (((x) << s) | ((x) >> (64u - s)));

#endif
}

static inline ulong rol1(const ulong x)
{
#if PLATFORM == OPENCL_PLATFORM_AMD

  uint2 output;
  uint2 x2 = as_uint2(x);

  output = amd_bitalign((x2).xy, (x2).yx, 31u);
  return as_ulong(output);

#else

  return (((x) << 1u) | ((x) >> (63u)));

#endif
}

static inline void keccakf(void *state)
{
  ulong *a = (ulong *)state;
  ulong b[5] = { 0, 0, 0, 0, 0 };
  ulong t;

  // iteration 1
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x0000000000000001;

  // iteration 2
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x0000000000008082;

  // iteration 3
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x800000000000808a;

  // iteration 4
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000080008000;

  // iteration 5
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x000000000000808b;

  // iteration 6
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x0000000080000001;

  // iteration 7
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000080008081;

  // iteration 8
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000000008009;

  // iteration 9
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x000000000000008a;

  // iteration 10
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x0000000000000088;

  // iteration 11
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x0000000080008009;

  // iteration 12
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x000000008000000a;

  // iteration 13
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x000000008000808b;

  // iteration 14
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x800000000000008b;

  // iteration 15
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000000008089;

  // iteration 16
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000000008003;

  // iteration 17
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000000008002;

  // iteration 18
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000000000080;

  // iteration 19
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x000000000000800a;

  // iteration 20
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x800000008000000a;

  // iteration 21
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000080008081;

  // iteration 22
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x8000000000008080;

  // iteration 23
  // Theta
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[5] ^= b[4] ^ rol1(b[1]);
  a[10] ^= b[4] ^ rol1(b[1]);
  a[15] ^= b[4] ^ rol1(b[1]);
  a[20] ^= b[4] ^ rol1(b[1]);

  a[1] ^= b[0] ^ rol1(b[2]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[11] ^= b[0] ^ rol1(b[2]);
  a[16] ^= b[0] ^ rol1(b[2]);
  a[21] ^= b[0] ^ rol1(b[2]);

  a[2] ^= b[1] ^ rol1(b[3]);
  a[7] ^= b[1] ^ rol1(b[3]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[17] ^= b[1] ^ rol1(b[3]);
  a[22] ^= b[1] ^ rol1(b[3]);

  a[3] ^= b[2] ^ rol1(b[4]);
  a[8] ^= b[2] ^ rol1(b[4]);
  a[13] ^= b[2] ^ rol1(b[4]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[23] ^= b[2] ^ rol1(b[4]);

  a[4] ^= b[3] ^ rol1(b[0]);
  a[9] ^= b[3] ^ rol1(b[0]);
  a[14] ^= b[3] ^ rol1(b[0]);
  a[19] ^= b[3] ^ rol1(b[0]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi
  t = a[1];
  b[0] = a[10];
  a[10] = rol1(t);

  t = b[0];
  b[0] = a[7];
  a[7] = rol(t, 3);

  t = b[0];
  b[0] = a[11];
  a[11] = rol(t, 6);

  t = b[0];
  b[0] = a[17];
  a[17] = rol(t, 10);

  t = b[0];
  b[0] = a[18];
  a[18] = rol(t, 15);

  t = b[0];
  b[0] = a[3];
  a[3] = rol(t, 21);

  t = b[0];
  b[0] = a[5];
  a[5] = rol(t, 28);

  t = b[0];
  b[0] = a[16];
  a[16] = rol(t, 36);

  t = b[0];
  b[0] = a[8];
  a[8] = rol(t, 45);

  t = b[0];
  b[0] = a[21];
  a[21] = rol(t, 55);

  t = b[0];
  b[0] = a[24];
  a[24] = rol(t, 2);

  t = b[0];
  b[0] = a[4];
  a[4] = rol(t, 14);

  t = b[0];
  b[0] = a[15];
  a[15] = rol(t, 27);

  t = b[0];
  b[0] = a[23];
  a[23] = rol(t, 41);

  t = b[0];
  b[0] = a[19];
  a[19] = rol(t, 56);

  t = b[0];
  b[0] = a[13];
  a[13] = rol(t, 8);

  t = b[0];
  b[0] = a[12];
  a[12] = rol(t, 25);

  t = b[0];
  b[0] = a[2];
  a[2] = rol(t, 43);

  t = b[0];
  b[0] = a[20];
  a[20] = rol(t, 62);

  t = b[0];
  b[0] = a[14];
  a[14] = rol(t, 18);

  t = b[0];
  b[0] = a[22];
  a[22] = rol(t, 39);

  t = b[0];
  b[0] = a[9];
  a[9] = rol(t, 61);

  t = b[0];
  b[0] = a[6];
  a[6] = rol(t, 20);

  t = b[0];
  b[0] = a[1];
  a[1] = rol(t, 44);

  // Chi
  b[0] = a[0];
  b[1] = a[1];
  b[2] = a[2];
  b[3] = a[3];
  b[4] = a[4];
  a[0] = b[0] ^ ((~b[1]) & b[2]);
  a[1] = b[1] ^ ((~b[2]) & b[3]);
  a[2] = b[2] ^ ((~b[3]) & b[4]);
  a[3] = b[3] ^ ((~b[4]) & b[0]);
  a[4] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[5];
  b[1] = a[6];
  b[2] = a[7];
  b[3] = a[8];
  b[4] = a[9];
  a[5] = b[0] ^ ((~b[1]) & b[2]);
  a[6] = b[1] ^ ((~b[2]) & b[3]);
  a[7] = b[2] ^ ((~b[3]) & b[4]);
  a[8] = b[3] ^ ((~b[4]) & b[0]);
  a[9] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[10];
  b[1] = a[11];
  b[2] = a[12];
  b[3] = a[13];
  b[4] = a[14];
  a[10] = b[0] ^ ((~b[1]) & b[2]);
  a[11] = b[1] ^ ((~b[2]) & b[3]);
  a[12] = b[2] ^ ((~b[3]) & b[4]);
  a[13] = b[3] ^ ((~b[4]) & b[0]);
  a[14] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[15];
  b[1] = a[16];
  b[2] = a[17];
  b[3] = a[18];
  b[4] = a[19];
  a[15] = b[0] ^ ((~b[1]) & b[2]);
  a[16] = b[1] ^ ((~b[2]) & b[3]);
  a[17] = b[2] ^ ((~b[3]) & b[4]);
  a[18] = b[3] ^ ((~b[4]) & b[0]);
  a[19] = b[4] ^ ((~b[0]) & b[1]);

  b[0] = a[20];
  b[1] = a[21];
  b[2] = a[22];
  b[3] = a[23];
  b[4] = a[24];
  a[20] = b[0] ^ ((~b[1]) & b[2]);
  a[21] = b[1] ^ ((~b[2]) & b[3]);
  a[22] = b[2] ^ ((~b[3]) & b[4]);
  a[23] = b[3] ^ ((~b[4]) & b[0]);
  a[24] = b[4] ^ ((~b[0]) & b[1]);

  // Iota
  a[0] ^= 0x0000000080000001;

  // iteration 24 (partial)

  // Theta (partial)
  b[0] = a[0] ^ a[5] ^ a[10] ^ a[15] ^ a[20];
  b[1] = a[1] ^ a[6] ^ a[11] ^ a[16] ^ a[21];
  b[2] = a[2] ^ a[7] ^ a[12] ^ a[17] ^ a[22];
  b[3] = a[3] ^ a[8] ^ a[13] ^ a[18] ^ a[23];
  b[4] = a[4] ^ a[9] ^ a[14] ^ a[19] ^ a[24];

  a[0] ^= b[4] ^ rol1(b[1]);
  a[1] ^= b[0] ^ rol1(b[2]);
  a[2] ^= b[1] ^ rol1(b[3]);
  a[3] ^= b[2] ^ rol1(b[4]);
  a[4] ^= b[3] ^ rol1(b[0]);
  a[6] ^= b[0] ^ rol1(b[2]);
  a[12] ^= b[1] ^ rol1(b[3]);
  a[18] ^= b[2] ^ rol1(b[4]);
  a[24] ^= b[3] ^ rol1(b[0]);

  // Rho Pi (partial)

  a[1] = rol(a[6], 44);
  a[2] = rol(a[12], 43);
  a[3] = rol(a[18], 21);
  a[4] = rol(a[24], 14);

  // Chi (partial)
  a[1] ^= ((~a[2]) & a[3]);
  a[2] ^= ((~a[3]) & a[4]);
  a[3] ^= ((~a[4]) & a[0]);
}

static inline void keccak256(uchar *digest, uchar const *message)
{
  // declare the sponge
  uchar sponge[SPONGE_LENGTH];

  // populate the initial message at the start of the sponge state
# pragma unroll
  for (uchar i = 0; i < MESSAGE_LENGTH; ++i)
    sponge[i] = message[i];

  // begin padding based on message length
  sponge[MESSAGE_LENGTH] = 0x01u;

  // fill padding
# pragma unroll
  for (uchar i = START_PADDING; i < END_PADDING; ++i)
    sponge[i] = 0;

  // end padding
  sponge[END_PADDING] = 0x80u;

  // fill remaining sponge state with zeroes
# pragma unroll
  for (uchar i = START_FINAL; i < SPONGE_LENGTH; ++i)
    sponge[i] = 0;

  // Apply keccakf
  keccakf(sponge);

  // trim the first 12 bytes from the digest
# pragma unroll
  for (uchar i = 0; i < UINT160_LENGTH; ++i)
    digest[i] = sponge[i + UINT96_LENGTH];
}

static inline bool hasTotal(
  uchar const one, uchar const two, uchar const three, uchar const four,
  uchar const five, uchar const six, uchar const seven, uchar const eight,
  uchar const nine, uchar const ten, uchar const eleven, uchar const twelve,
  uchar const thirteen, uchar const fourteen, uchar const fifteen,
  uchar const sixteen, uchar const seventeen, uchar const eighteen,
  uchar const nineteen, uchar const twenty, __constant uchar const *leading
) {
  return (
    (
      (one == 0x00) + (two == 0x00) + (three == 0x00) + (four == 0x00) +
      (five == 0x00) + (six == 0x00) + (seven == 0x00) + (eight == 0x00) +
      (nine == 0x00) + (ten == 0x00) + (eleven == 0x00) + (twelve == 0x00) +
      (thirteen == 0x00) + (fourteen == 0x00) + (fifteen == 0x00) +
      (sixteen == 0x00) + (seventeen == 0x00) + (eighteen == 0x00) +
      (nineteen == 0x00) + (twenty == 0x00)
    ) >= leading[1]
  );
}

static inline bool hasLeading(uchar const *left, __constant uchar const *leading)
{
  for (uchar i = 0; i < leading[0]; ++i)
  {
    if (left[i] != 0) return false;
  }
  return true;
}

__kernel void hashMessage(
  __constant uchar const *d_message,
  __constant uchar const *d_target,
  __constant ulong const *d_nonce,
  __global volatile ulong *restrict solutions,
  __global volatile uint *solutionCount
) {
  // declare the message, digest, and nonce
  uchar message[MESSAGE_LENGTH];
  uchar digest[UINT160_LENGTH];
  nonce_t nonce;

  // populate the header of the message
# pragma unroll
  for (uchar i = 0; i < NONCE_START; ++i)
    message[i] = d_message[i];

  // populate the nonce
  nonce.uint64_t = get_global_id(0) + d_nonce[0];

  // populate the body of the message with the nonce
# pragma unroll
  for (uchar i = 0; i < UINT64_LENGTH; ++i)
    message[NONCE_START + i] = nonce.uint8_t[i];

  // populate the footer of the message
# pragma unroll
  for (uchar i = NONCE_END; i < MESSAGE_LENGTH; ++i)
    message[i] = d_message[i];

  // calculate the resultant address
  keccak256(digest, message);

  // determine if the address meets the constraints
  if (hasLeading(digest, d_target) || hasTotal(
    digest[0], digest[1], digest[2],
    digest[3], digest[4], digest[5],
    digest[6], digest[7], digest[8],
    digest[9], digest[10], digest[11],
    digest[12], digest[13], digest[14],
    digest[15], digest[16], digest[17],
    digest[18], digest[19], d_target))
  {
    if (solutionCount[0] < MAX_SOLUTIONS)
    {
      // add the nonce to the solutions buffer and increase the solution count
      solutions[solutionCount[0]] = nonce.uint64_t;
      ++solutionCount[0];
    }
  }
}